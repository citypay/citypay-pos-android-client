/**
 * Kinetic Smart API
 * Kinetic Smart Swagger Implementatin
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@citypay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.citypay.pos.kinetic.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CloseResponse {
  
  @SerializedName("success")
  private Boolean success = null;
  @SerializedName("uuid")
  private String uuid = null;

  /**
   * Indicates that the reconciliation process is now underway on the device.
   **/
  @ApiModelProperty(required = true, value = "Indicates that the reconciliation process is now underway on the device.")
  public Boolean getSuccess() {
    return success;
  }
  public void setSuccess(Boolean success) {
    this.success = success;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloseResponse closeResponse = (CloseResponse) o;
    return (this.success == null ? closeResponse.success == null : this.success.equals(closeResponse.success)) &&
        (this.uuid == null ? closeResponse.uuid == null : this.uuid.equals(closeResponse.uuid));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.success == null ? 0: this.success.hashCode());
    result = 31 * result + (this.uuid == null ? 0: this.uuid.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloseResponse {\n");
    
    sb.append("  success: ").append(success).append("\n");
    sb.append("  uuid: ").append(uuid).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
